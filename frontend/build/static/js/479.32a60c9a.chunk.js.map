{"version":3,"file":"static/js/479.32a60c9a.chunk.js","mappings":"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","sources":["components/ListView/ListView.tsx","routes/Home/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Offer } from '../../types';\nimport OfferCard from '../OfferCard/OfferCard';\nimport './ListView.scss';\n\nexport interface ListViewProps {\n  items: Offer[];\n}\n\nconst ListView = ({ items }: ListViewProps): JSX.Element => {\n  const pageSize = 100;\n  const numberOfPages = Math.ceil(items.length / pageSize);\n  const [currentPage, setCurrentPage] = useState(1);\n  const start = (currentPage - 1) * pageSize;\n  const end = start + pageSize;\n  const data = items.slice(start, end);\n  const shouldRenderPeviousButton = currentPage > pageSize;\n  const shouldRenderNextButton = currentPage + pageSize < numberOfPages;\n  const pages = [...Array(numberOfPages)].map((_, i) => i + 1);\n\n  return (\n    <>\n      <div className='list-view' data-testid='list-view'>\n        {data.map(offer => (\n          <OfferCard data={offer} key={offer.id} />\n        ))}\n      </div>\n\n      {numberOfPages > 1 && (\n        <nav className='pagination'>\n          <ul>\n            {shouldRenderPeviousButton && (\n              <li className='previous-page'>\n                <button\n                  className='previous-page'\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  &#10094;\n                </button>\n              </li>\n            )}\n            {pages.map(i => (\n              <li key={i}>\n                <button\n                  className={`${currentPage === i ? 'active' : ''} page-${i}`}\n                  onClick={() => setCurrentPage(i)}\n                >\n                  {i}\n                </button>\n              </li>\n            ))}\n            {shouldRenderNextButton && (\n              <li>\n                <button\n                  className='next-page'\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  &#10095;\n                </button>\n              </li>\n            )}\n          </ul>\n        </nav>\n      )}\n    </>\n  );\n};\n\nexport default ListView;\n","import React, { useState, useEffect, useContext } from 'react';\nimport './Home.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport apiService from '../../api.service';\nimport ListView from '../../components/ListView';\nimport { Spinner } from '@fabrigeas/react-components';\nimport { Offer } from '../../types';\nimport { ROUTES } from '../../constants';\nimport notification from '../../contexts/notification';\nimport { useAppSelector } from '../../redux/hooks';\n\nconst Home = (): JSX.Element => {\n  const [title, setTitle] = useState('');\n  const [items, setItems] = useState<Offer[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { error } = useContext(notification);\n  const location = useLocation();\n  const offerType = location.pathname.split('/').pop();\n  const query = { offerType, title };\n  const cartItemsCount = useAppSelector(({ cart }) =>\n    Object.values(cart.cart).reduce(\n      (total, { quantity }) => (total += quantity),\n      0\n    )\n  );\n  const user = useAppSelector(({ user }) => user);\n  const isAdmin = user\n    ? ['mamdjotresia99', 'mawelle', 'mkjenny15', 'fabrigeas'].includes(\n        user.email.split('@')[0]\n      )\n    : false;\n  const fetchOffers = (e?: React.FormEvent) => {\n    e?.preventDefault();\n\n    setIsLoading(true);\n\n    const url = `offers?${new URLSearchParams(\n      query as Record<string, string>\n    ).toString()}`;\n\n    apiService\n      .get(url)\n      .then(({ data }) => {\n        setItems(data.offers);\n      })\n      .catch(e => {\n        error(e.message, 'Failed to get offers');\n      })\n      .finally(() => setIsLoading(false));\n  };\n  const useDebounce = (value: string, delay: number) => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n      return () => {\n        clearTimeout(handler);\n      };\n    }, [value, delay]);\n    return debouncedValue;\n  };\n  const debounce = useDebounce(title, 500);\n\n  useEffect(() => {\n    fetchOffers();\n  }, [offerType, debounce]);\n\n  return (\n    <div className='home'>\n      <hr />\n      <form onSubmit={fetchOffers}>\n        <div className='searchbox'>\n          <input\n            value={title}\n            onInput={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setTitle(e.target.value)\n            }\n            placeholder='Search by title'\n          />\n          <span className='search-icon'> &#128269; </span>\n        </div>\n      </form>\n      <div>{isLoading ? <Spinner /> : <ListView items={items} />}</div>\n      <div className='actions'>\n        {isAdmin ? <Link to={ROUTES.NEW_OFFER}>Create new offer</Link> : null}\n        {cartItemsCount ? (\n          <Link to={ROUTES.MY_CART}>\n            Checkout&nbsp;\n            {`${cartItemsCount} ${cartItemsCount > 1 ? 'items' : 'item'}`}\n          </Link>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","items","pageSize","numberOfPages","Math","ceil","length","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","start","end","data","slice","shouldRenderPeviousButton","shouldRenderNextButton","pages","_toConsumableArray","Array","map","_","i","_jsxs","_Fragment","children","_jsx","className","offer","OfferCard","id","onClick","concat","title","setTitle","_useState3","_useState4","setItems","_useState5","_useState6","isLoading","setIsLoading","error","useContext","notification","offerType","useLocation","pathname","split","pop","query","cartItemsCount","useAppSelector","cart","Object","values","reduce","total","_ref2","quantity","user","_ref3","isAdmin","includes","email","fetchOffers","e","preventDefault","url","URLSearchParams","toString","apiService","then","_ref4","offers","catch","message","finally","debounce","value","delay","_useState7","_useState8","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","onSubmit","onInput","target","placeholder","Spinner","ListView","Link","to","ROUTES"],"sourceRoot":""}