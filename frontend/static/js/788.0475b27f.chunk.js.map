{"version":3,"file":"static/js/788.0475b27f.chunk.js","mappings":"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","sources":["components/ListView/ListView.tsx","components/Spinner/Spinner.tsx","routes/Home/Home.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Offer } from '../../types';\nimport OfferCard from '../OfferCard/OfferCard';\nimport './ListView.scss';\n\nexport interface ListViewProps {\n  items: Offer[];\n}\n\nconst ListView = ({ items }: ListViewProps): JSX.Element => {\n  const pageSize = 3;\n  const numberOfPages = Math.ceil(items.length / pageSize);\n  const [currentPage, setCurrentPage] = useState(1);\n  const start = (currentPage - 1) * pageSize;\n  const end = start + pageSize;\n  const data = items.slice(start, end);\n  const shouldRenderPeviousButton = currentPage > pageSize;\n  const shouldRenderNextButton = currentPage + pageSize < numberOfPages;\n  const pages = [...Array(numberOfPages)].map((_, i) => i + 1);\n\n  return (\n    <>\n      <div className='list-view' data-testid='list-view'>\n        {data.map(offer => (\n          <OfferCard data={offer} key={offer.id} />\n        ))}\n      </div>\n\n      {numberOfPages > 1 && (\n        <nav className='pagination'>\n          <ul>\n            {shouldRenderPeviousButton && (\n              <li className='previous-page'>\n                <button\n                  className='previous-page'\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  &#10094;\n                </button>\n              </li>\n            )}\n            {pages.map(i => (\n              <li key={i}>\n                <button\n                  className={`${currentPage === i ? 'active' : ''} page-${i}`}\n                  onClick={() => setCurrentPage(i)}\n                >\n                  {i}\n                </button>\n              </li>\n            ))}\n            {shouldRenderNextButton && (\n              <li>\n                <button\n                  className='next-page'\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  &#10095;\n                </button>\n              </li>\n            )}\n          </ul>\n        </nav>\n      )}\n    </>\n  );\n};\n\nexport default ListView;\n","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = () => {\n  return <div className='loader'></div>;\n};\n\nexport default Spinner;\n","import React, { useState, useEffect, useContext } from 'react';\nimport './Home.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport apiService from '../../api.service';\nimport ListView from '../../components/ListView';\nimport Spinner from '../../components/Spinner';\nimport { Offer } from '../../types';\nimport { ROUTES } from '../../constants';\nimport notification from '../../contexts/notification';\n\nconst Home = (): JSX.Element => {\n  const [title, setTitle] = useState('');\n  const [items, setItems] = useState<Offer[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { error } = useContext(notification);\n  const location = useLocation();\n  const offerType = location.pathname.split('/').pop();\n  const query = { offerType, title };\n  const fetchOffers = (e?: React.FormEvent) => {\n    e?.preventDefault();\n\n    setIsLoading(true);\n\n    const url = `offers?${new URLSearchParams(\n      query as Record<string, string>\n    ).toString()}`;\n\n    apiService\n      .get(url)\n      .then(({ data }) => {\n        setItems(data.offers);\n      })\n      .catch(e => {\n        error(e.message, 'Failed to get offers');\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  useEffect(() => {\n    fetchOffers();\n  }, [offerType, title]);\n\n  return (\n    <div className='home'>\n      <hr />\n      <form onSubmit={fetchOffers}>\n        <div className='searchbox'>\n          <input\n            value={title}\n            onInput={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setTitle(e.target.value)\n            }\n            placeholder='Search by title'\n          />\n          <span className='search-icon'> &#128269; </span>\n        </div>\n      </form>\n      <div>{isLoading ? <Spinner /> : <ListView items={items} />}</div>\n      <div className='actions'>\n        <Link to={ROUTES.NEW_OFFER}>Create new offer</Link>\n        <Link to={ROUTES.MY_CART}>Checkout my orders</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","items","numberOfPages","Math","ceil","length","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","start","end","data","slice","shouldRenderPeviousButton","shouldRenderNextButton","pages","_toConsumableArray","Array","map","_","i","_jsxs","_Fragment","children","_jsx","className","offer","OfferCard","id","onClick","concat","title","setTitle","_useState3","_useState4","setItems","_useState5","_useState6","isLoading","setIsLoading","error","useContext","notification","offerType","useLocation","pathname","split","pop","query","fetchOffers","e","preventDefault","url","URLSearchParams","toString","apiService","then","offers","catch","message","finally","useEffect","onSubmit","value","onInput","target","placeholder","Spinner","ListView","Link","to","ROUTES"],"sourceRoot":""}