tags:
  - name: users
    description: users API
  - name: offers
    description: offers API
  - name: files
    description: files API
  - name: auth
    description: authentification API

paths:
  /api/users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
  /api/users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # offers
  /api/offers:
    get:
      tags:
        - offers
      summary: find  offers
      parameters:
        - in: query
          name: title
          type: string
        - in: query
          name: offerType
          schema:
          $ref: '#/components/schemas/OfferType'
        - in: query
          name: daysOfTheWeek
          type: string
        - in: query
          name: date
          type: string
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
    post:
      tags:
        - offers
      summary: Create a new offer
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/offers'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  /api/offers/{id}:
    get:
      tags:
        - offers
      summary: Find offer By Id
      parameters:
        - name: id
          in: path
          description: offer Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    put:
      tags:
        - offers
      summary: Update offer By Id
      parameters:
        - name: id
          in: path
          description: offer Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/offers'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    patch:
      tags:
        - offers
      summary: Update offer By Id
      parameters:
        - name: id
          in: path
          description: offer Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/offers'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    delete:
      tags:
        - offers
      summary: Delete offer By Id
      parameters:
        - name: id
          in: path
          description: offer Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /api/files/{id}:
    put:
      tags:
        - files
      summary: Uploads a file.
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          description: Id(offer)
          required: true
        - in: formData
          name: file
          type: file
          description: The file to upload.
    delete:
      tags:
        - files
      summary: Delete a file
      parameters:
        - in: path
          name: id
          description: Id(offer)
          required: true
        - in: header
          name: filename
          schema:
            type: string
            description: string id of user to delete
          required: true
      responses:
        200:
          description: 'OK'

  # authentification
  /auth/sign-up:
    post:
      tags:
        - auth
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  /auth/sign-in:
    post:
      tags:
        - auth
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/signIn'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  /auth/sign-out:
    post:
      tags:
        - auth
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

# definitions
definitions:
  signIn:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user Email
        example: lorem@ipsum.dolot
      password:
        type: string
        description: user Password
        password: passwordqwertz
    examples:
      externalValue: src/http/user.http
  users:
    type: object
    required:
      - firstName
      - lastName
      - email
      - password
    properties:
      firstName:
        type: string
        description: user First name
        example: John
      lastName:
        type: string
        description: user last name
        example: Doe
      email:
        type: string
        description: user Email
        example: lorem@ipsum.dolot
      password:
        type: string
        description: user Password
        password: passwordqwertz
    examples:
      externalValue: src/http/user.http
  offers:
    type: object
    required:
      - title
      - price
      - offerType
      - images
      - daysOfThheWeek
    properties:
      title:
        type: string
        description: user Email
        example: example offer
      price:
        type: string
        description: unit price
        example: 3500
      offerType:
        schema:
          $ref: '#/components/schemas/OfferType'
          example: drink
      description:
        type: string
        example: ""
      images:
        type: array
        description: offer Images
        example: []
      daysOfTheWeek:
        type: array
        example: [Monday,Mi, Sunda]
      date:
        type: string
        example: "Sat Sep 23 1989 09:56:14 GMT+0100 (Central European Standard Time)"

schemes:
  - https
  - http

components:
  schemas:
    OfferType:
      in: query
      name: offerType
      type: string
      enum: 
        - food
        - drink
        - salad
        - offer
